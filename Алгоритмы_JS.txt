
1. Реверс строки

function reverseString(str) {
    return str.split('').reverse().join('');
}


2. Проверка на палиндром

function isPalindrome(str) {
    const cleaned = str.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();
    return cleaned === cleaned.split('').reverse().join('');
}


3. Фибоначчи

function fibonacci(n) {
    if (n <= 1) return n;
    return fibonacci(n - 1) + fibonacci(n - 2);
}


4. Поиск максимального числа в массиве

function findMax(arr) {
    return Math.max(...arr);
}


5. Удаление дубликатов из массива

function removeDuplicates(arr) {
    return [...new Set(arr)];
}


6. Анаграммы

function isAnagram(str1, str2) {
    const normalize = str => str.toLowerCase().split('').sort().join('');
    return normalize(str1) === normalize(str2);
}


7. FizzBuzz

for (let i = 1; i <= 100; i++) {
    let output = '';
    if (i % 3 === 0) output += 'Fizz';
    if (i % 5 === 0) output += 'Buzz';
    console.log(output || i);
}


8. Двоичный поиск

function binarySearch(arr, target) {
    let left = 0;
    let right = arr.length - 1;

    while (left <= right) {
        const mid = Math.floor((left + right) / 2);
        if (arr[mid] === target) return mid;
        if (arr[mid] < target) left = mid + 1; 
        else right = mid - 1;
    }
    return -1;
}


9. Сортировка массива (пузырьковая)

function bubbleSort(arr) {
    for (let i = 0; i < arr.length; i++) {
        for (let j = 0; j < arr.length - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];
            }
        }
    }
    return arr;
}


10. Сумма двух чисел

function twoSum(arr, target) {
    const map = new Map();
    for (let i = 0; i < arr.length; i++) {
        const complement = target - arr[i];
        if (map.has(complement)) {
            return [map.get(complement), i];
        }
        map.set(arr[i], i);
    }
    return [];
}


11. Баланс скобок

function isValidBrackets(str) {
    const stack = [];
    const map = {
        ')': '(',
        '}': '{',
        ']': '['
    };

    for (let char of str) {
        if (['(', '{', '['].includes(char)) {
            stack.push(char);
        } else if (map[char] && stack.pop() !== map[char]) {
            return false;
        }
    }
    return stack.length === 0;
}


12. Частота символов в строке

function charFrequency(str) {
    const freq = {};
    for (let char of str) {
        freq[char] = (freq[char] || 0) + 1;
    }
    return freq;
}


13. Поиск первого уникального элемента

function findUnique(arr) {
  return arr.find(item => arr.indexOf(item) === arr.lastIndexOf(item));
}


14. Поиск всех уникальных элементов

function findAllUnique(arr) {
  return arr.filter(item => arr.indexOf(item) === arr.lastIndexOf(item));
}


15. Поиск второго по величине числа

function secondLargest(arr) {
  let max = -Infinity, secondMax = -Infinity;
  for (const num of arr) {
    if (num > max) {
      secondMax = max;
      max = num;
    } else if (num > secondMax && num !== max) {
      secondMax = num;
    }
  }
  return secondMax;
}


16. Быстрая сортировка (QuickSort)

function quickSort(arr) {
  if (arr.length <= 1) return arr;

  const pivot = arr[arr.length - 1];
  const left = [];
  const right = [];

  for (let i = 0; i < arr.length - 1; i++) {
    if (arr[i] < pivot) left.push(arr[i]);
    else right.push(arr[i]);
  }

  return [...quickSort(left), pivot, ...quickSort(right)];
}


17. Линейный поиск


function linearSearch(arr, target) {
  for (let i = 0; i < arr.length; i++) {
    if (arr[i] === target) return i;
  }
  return -1;
}


